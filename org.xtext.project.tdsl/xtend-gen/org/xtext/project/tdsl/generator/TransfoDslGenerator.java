/**
 * generated by Xtext
 */
package org.xtext.project.tdsl.generator;

import com.google.common.collect.Iterators;
import java.util.Iterator;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;
import org.xtext.project.tdsl.generator.TransformationRunner;
import org.xtext.project.tdsl.transfoDsl.SrcMetamodel;
import org.xtext.project.tdsl.transfoDsl.TrgMetamodel;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class TransfoDslGenerator implements IGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    TreeIterator<EObject> _allContents = resource.getAllContents();
    Iterator<SrcMetamodel> _filter = Iterators.<SrcMetamodel>filter(_allContents, SrcMetamodel.class);
    final Procedure1<SrcMetamodel> _function = (SrcMetamodel smm) -> {
      TransformationRunner _transformationRunner = new TransformationRunner();
      _transformationRunner.loadModel(smm);
    };
    IteratorExtensions.<SrcMetamodel>forEach(_filter, _function);
    TreeIterator<EObject> _allContents_1 = resource.getAllContents();
    Iterator<TrgMetamodel> _filter_1 = Iterators.<TrgMetamodel>filter(_allContents_1, TrgMetamodel.class);
    final Procedure1<TrgMetamodel> _function_1 = (TrgMetamodel tmm) -> {
      TransformationRunner _transformationRunner = new TransformationRunner();
      _transformationRunner.saveAndCreateModel(tmm);
    };
    IteratorExtensions.<TrgMetamodel>forEach(_filter_1, _function_1);
  }
}
