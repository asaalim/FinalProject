package org.xtext.project.tdsl.generator

import org.xtext.project.tdsl.transfoDsl.Transformation
import org.xtext.project.tdsl.transfoDsl.SrcMetamodel

class TransformationRunner {
	
	val static IN_METAMODEL = "/Composed.ecore";
	val static IN_METAMODEL_NAME = "Composed";
	val static IN_MODEL = "./models/composed.xmi";
	var inputMetamodelNsURI = "";
	var outputMetamodelNsURI = "";
	
	
	def run(Transformation t){
		//1// Load Model
		//2// Run Model
		//3// Derive Layer
		//4// Execute Layer
		println("My simple run function.")
		//println(t.class.package.class.typeName)
		println(t.srcmodel.toString)
	}
	
	def loadModel(SrcMetamodel sm){
		//register the package
		ComposedPackage.eINSTANCE.eClass();
	EcorePackage.eINSTANCE.eClass();
	EPackage.Registry.INSTANCE.put(EcoreFactory.eINSTANCE.getEPackage().getNsURI(), EcoreFactory.eINSTANCE.getEPackage());
	//get the uri
	URI ecoreUri = URI.createURI(EcoreFactory.eINSTANCE.getEPackage().getNsURI(), true);
	//get the resource
	Resource ecoreResource = xtextResourceSet.getResource(ecoreUri, true);
	try {
	//load it
	ecoreResource.load(null);
	} catch (IOException e) {
	e.printStackTrace();
		}
	}
	
	
}