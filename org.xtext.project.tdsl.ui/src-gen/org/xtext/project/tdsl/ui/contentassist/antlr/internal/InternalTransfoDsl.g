/*
 * generated by Xtext
 */
grammar InternalTransfoDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.project.tdsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.project.tdsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.project.tdsl.services.TransfoDslGrammarAccess;

}

@parser::members {
 
 	private TransfoDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TransfoDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleTransformation
entryRuleTransformation 
:
{ before(grammarAccess.getTransformationRule()); }
	 ruleTransformation
{ after(grammarAccess.getTransformationRule()); } 
	 EOF 
;

// Rule Transformation
ruleTransformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransformationAccess().getGroup()); }
(rule__Transformation__Group__0)
{ after(grammarAccess.getTransformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSrcMetamodel
entryRuleSrcMetamodel 
:
{ before(grammarAccess.getSrcMetamodelRule()); }
	 ruleSrcMetamodel
{ after(grammarAccess.getSrcMetamodelRule()); } 
	 EOF 
;

// Rule SrcMetamodel
ruleSrcMetamodel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSrcMetamodelAccess().getGroup()); }
(rule__SrcMetamodel__Group__0)
{ after(grammarAccess.getSrcMetamodelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSrcModel
entryRuleSrcModel 
:
{ before(grammarAccess.getSrcModelRule()); }
	 ruleSrcModel
{ after(grammarAccess.getSrcModelRule()); } 
	 EOF 
;

// Rule SrcModel
ruleSrcModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSrcModelAccess().getGroup()); }
(rule__SrcModel__Group__0)
{ after(grammarAccess.getSrcModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLayer
entryRuleLayer 
:
{ before(grammarAccess.getLayerRule()); }
	 ruleLayer
{ after(grammarAccess.getLayerRule()); } 
	 EOF 
;

// Rule Layer
ruleLayer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLayerAccess().getGroup()); }
(rule__Layer__Group__0)
{ after(grammarAccess.getLayerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrgModel
entryRuleTrgModel 
:
{ before(grammarAccess.getTrgModelRule()); }
	 ruleTrgModel
{ after(grammarAccess.getTrgModelRule()); } 
	 EOF 
;

// Rule TrgModel
ruleTrgModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrgModelAccess().getGroup()); }
(rule__TrgModel__Group__0)
{ after(grammarAccess.getTrgModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__0__Impl
	rule__Transformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getTransformationKeyword_0()); }

	'transformation' 

{ after(grammarAccess.getTransformationAccess().getTransformationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__1__Impl
	rule__Transformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getNameAssignment_1()); }
(rule__Transformation__NameAssignment_1)
{ after(grammarAccess.getTransformationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__2__Impl
	rule__Transformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getTransformationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__3__Impl
	rule__Transformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getSrcmetamodelAssignment_3()); }
(rule__Transformation__SrcmetamodelAssignment_3)
{ after(grammarAccess.getTransformationAccess().getSrcmetamodelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__4__Impl
	rule__Transformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getSrcmodelAssignment_4()); }
(rule__Transformation__SrcmodelAssignment_4)
{ after(grammarAccess.getTransformationAccess().getSrcmodelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__5__Impl
	rule__Transformation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTransformationAccess().getLayerAssignment_5()); }
(rule__Transformation__LayerAssignment_5)
{ after(grammarAccess.getTransformationAccess().getLayerAssignment_5()); }
)
(
{ before(grammarAccess.getTransformationAccess().getLayerAssignment_5()); }
(rule__Transformation__LayerAssignment_5)*
{ after(grammarAccess.getTransformationAccess().getLayerAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__6__Impl
	rule__Transformation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getTargetmodelAssignment_6()); }
(rule__Transformation__TargetmodelAssignment_6)
{ after(grammarAccess.getTransformationAccess().getTargetmodelAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getTransformationAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SrcMetamodel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SrcMetamodel__Group__0__Impl
	rule__SrcMetamodel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SrcMetamodel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcMetamodelAccess().getUSEKeyword_0()); }

	'USE' 

{ after(grammarAccess.getSrcMetamodelAccess().getUSEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SrcMetamodel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SrcMetamodel__Group__1__Impl
	rule__SrcMetamodel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SrcMetamodel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcMetamodelAccess().getNameAssignment_1()); }
(rule__SrcMetamodel__NameAssignment_1)
{ after(grammarAccess.getSrcMetamodelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SrcMetamodel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SrcMetamodel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SrcMetamodel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcMetamodelAccess().getImportURIAssignment_2()); }
(rule__SrcMetamodel__ImportURIAssignment_2)
{ after(grammarAccess.getSrcMetamodelAccess().getImportURIAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SrcModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SrcModel__Group__0__Impl
	rule__SrcModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SrcModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcModelAccess().getINKeyword_0()); }

	'IN' 

{ after(grammarAccess.getSrcModelAccess().getINKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SrcModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SrcModel__Group__1__Impl
	rule__SrcModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SrcModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcModelAccess().getNameAssignment_1()); }
(rule__SrcModel__NameAssignment_1)
{ after(grammarAccess.getSrcModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SrcModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SrcModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SrcModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcModelAccess().getGroup_2()); }
(rule__SrcModel__Group_2__0)
{ after(grammarAccess.getSrcModelAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SrcModel__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SrcModel__Group_2__0__Impl
	rule__SrcModel__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SrcModel__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcModelAccess().getConformsKeyword_2_0()); }

	'conforms' 

{ after(grammarAccess.getSrcModelAccess().getConformsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SrcModel__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SrcModel__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SrcModel__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcModelAccess().getSourcemetamodelAssignment_2_1()); }
(rule__SrcModel__SourcemetamodelAssignment_2_1)
{ after(grammarAccess.getSrcModelAccess().getSourcemetamodelAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Layer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group__0__Impl
	rule__Layer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getApplyKeyword_0()); }

	'apply' 

{ after(grammarAccess.getLayerAccess().getApplyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Layer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getNameAssignment_1()); }
(rule__Layer__NameAssignment_1)
{ after(grammarAccess.getLayerAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrgModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrgModel__Group__0__Impl
	rule__TrgModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrgModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrgModelAccess().getOUTKeyword_0()); }

	'OUT' 

{ after(grammarAccess.getTrgModelAccess().getOUTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrgModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrgModel__Group__1__Impl
	rule__TrgModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrgModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrgModelAccess().getNameAssignment_1()); }
(rule__TrgModel__NameAssignment_1)
{ after(grammarAccess.getTrgModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrgModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrgModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrgModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrgModelAccess().getFilepathAssignment_2()); }
(rule__TrgModel__FilepathAssignment_2)
{ after(grammarAccess.getTrgModelAccess().getFilepathAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Transformation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTransformationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__SrcmetamodelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getSrcmetamodelSrcMetamodelParserRuleCall_3_0()); }
	ruleSrcMetamodel{ after(grammarAccess.getTransformationAccess().getSrcmetamodelSrcMetamodelParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__SrcmodelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getSrcmodelSrcModelParserRuleCall_4_0()); }
	ruleSrcModel{ after(grammarAccess.getTransformationAccess().getSrcmodelSrcModelParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__LayerAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getLayerLayerParserRuleCall_5_0()); }
	ruleLayer{ after(grammarAccess.getTransformationAccess().getLayerLayerParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__TargetmodelAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getTargetmodelTrgModelParserRuleCall_6_0()); }
	ruleTrgModel{ after(grammarAccess.getTransformationAccess().getTargetmodelTrgModelParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SrcMetamodel__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcMetamodelAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSrcMetamodelAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SrcMetamodel__ImportURIAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcMetamodelAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getSrcMetamodelAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SrcModel__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcModelAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSrcModelAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SrcModel__SourcemetamodelAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSrcModelAccess().getSourcemetamodelSrcMetamodelCrossReference_2_1_0()); }
(
{ before(grammarAccess.getSrcModelAccess().getSourcemetamodelSrcMetamodelIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSrcModelAccess().getSourcemetamodelSrcMetamodelIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getSrcModelAccess().getSourcemetamodelSrcMetamodelCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayerAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLayerAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrgModel__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrgModelAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTrgModelAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrgModel__FilepathAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrgModelAccess().getFilepathSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getTrgModelAccess().getFilepathSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


